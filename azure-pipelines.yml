trigger:
  branches:
    exclude:
      - '*'
  tags:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageRepo: 'arlepton'
  imageName: '$(Build.Repository.Name)'
  #imageVersion: '$(Build.SourceBranchName)'
  imageVersion: '0.2.0'

stages:
- stage: Compile
  displayName: Docker - Build and Push
  jobs:
    - job: CompilePush
      displayName: Docker - Build and Push
      steps:
      - task: Docker@2
        displayName: docker build
        inputs:
          containerRegistry: 'acr-arlepton'
          repository: '$(imageRepo)/$(imageName)'
          command: 'build'
          Dockerfile: '**Dockerfile'
          tags: '$(imageVersion)'
      - task: Docker@2
        displayName: docker push
        inputs:
          containerRegistry: 'acr-arlepton'
          repository: '$(imageRepo)/$(imageName)'
          command: 'push'
          tags: '$(imageVersion)'
      - task: CmdLine@2
        displayName: Scan
        inputs:
          script: |
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 0 --severity MEDIUM,HIGH --ignore-unfixed $(containerRegistry)/$(imageRepository):$(tag)
         
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy --exit-code 1 --severity CRITICAL --ignore-unfixed $(containerRegistry)/$(imageRepository):$(tag)
